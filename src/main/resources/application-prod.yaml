spring:
  # Production Database Configuration (GCP Cloud SQL - hss_prod database)
  datasource:
    url: jdbc:postgresql:///hss_prod?cloudSqlInstance=${GCP_SQL_INSTANCE_CONNECTION_NAME}&socketFactory=com.google.cloud.sql.PostgresSocketFactory
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
    driver-class-name: org.postgresql.Driver
  
  cloud:
    gcp:
      sql:
        enabled: true
        database-name: hss_prod
        instance-connection-name: ${GCP_SQL_INSTANCE_CONNECTION_NAME}
        credentials:
          location: ${GOOGLE_APPLICATION_CREDENTIALS}
      storage:
        bucket-name: ${GCP_STORAGE_BUCKET}
        project-id: ${GCP_PROJECT_ID}
        credentials:
          location: ${GOOGLE_APPLICATION_CREDENTIALS}
  
  # JPA Configuration for Production
  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        jdbc:
          time_zone: UTC
        connection:
          provider_disables_autocommit: true
  
  # Security Configuration for Production
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: ${JWT_ISSUER_URI}

# Production specific logging
logging:
  level:
    com.hss.hss_backend: INFO
    org.springframework.security: WARN
    org.hibernate.SQL: WARN
    org.springframework.web: WARN
    root: WARN
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
