spring:
  application:
    name: hss-backend
  
  profiles:
    active: dev
  
  # JPA/Hibernate Configuration
  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
    open-in-view: false
  
  # Flyway Configuration
  flyway:
    enabled: true
    locations: classpath:db/migration
    baseline-on-migrate: true
    validate-on-migrate: true
  
  # GCP Cloud SQL Configuration (Default - will be overridden by profiles)
  datasource:
    url: jdbc:postgresql:///${DB_NAME:hss_dev}?cloudSqlInstance=${GCP_SQL_INSTANCE_CONNECTION_NAME}&socketFactory=com.google.cloud.sql.postgres.SocketFactory
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 5
      minimum-idle: 2
      connection-timeout: 20000
      idle-timeout: 300000
      max-lifetime: 1200000
  
  cloud:
    gcp:
      storage:
        bucket-name: ${GCP_STORAGE_BUCKET:hss-storage-bucket}
  
  # Security Configuration
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: ${JWT_ISSUER_URI:https://securetoken.google.com/hss-project-id}

# Firebase Configuration
firebase:
  project-id: ${FIREBASE_PROJECT_ID:hss-project-id}
  service-account-key: ${FIREBASE_SERVICE_ACCOUNT_KEY:}

# Server Configuration
server:
  port: ${PORT:8080}
  servlet:
    context-path: /

# Actuator Configuration
management:
  endpoints:
    web:
      exposure:
        include: health,info,prometheus,metrics
  endpoint:
    health:
      show-details: always
  server:
    port: ${PORT:8080}
  metrics:
    export:
      prometheus:
        enabled: true

# Logging Configuration
logging:
  level:
    com.hss.hss_backend: DEBUG
    org.springframework.security: DEBUG
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE
