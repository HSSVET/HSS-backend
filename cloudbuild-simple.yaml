# Simple Cloud Build configuration for HSS Backend
steps:
  # 1. Test
  - name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        echo "ðŸ§ª Backend testleri Ã§alÄ±ÅŸtÄ±rÄ±lÄ±yor..."
        ./mvnw -B test
        echo "âœ… Testler baÅŸarÄ±lÄ±!"

  # 2. Build
  - name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        echo "ðŸ”¨ Backend build ediliyor..."
        ./mvnw -B clean package -DskipTests
        echo "âœ… Build baÅŸarÄ±lÄ±!"

  # 3. Docker build
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'build'
      - '-t'
      - 'europe-west3-docker.pkg.dev/$PROJECT_ID/hss-backend/hss-backend:$SHORT_SHA'
      - '.'

  # 4. Docker push
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'push'
      - 'europe-west3-docker.pkg.dev/$PROJECT_ID/hss-backend/hss-backend:$SHORT_SHA'

  # 5. Cloud Run deploy
  - name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        echo "ðŸš€ Cloud Run'a deploy ediliyor..."
        gcloud run deploy hss-backend-dev \
          --image=europe-west3-docker.pkg.dev/$PROJECT_ID/hss-backend/hss-backend:$SHORT_SHA \
          --region=europe-west3 \
          --platform=managed \
          --allow-unauthenticated \
          --min-instances=0 \
          --max-instances=2 \
          --port=8080
        echo "âœ… Cloud Run deploy baÅŸarÄ±lÄ±!"

# Images to be pushed
images:
  - 'europe-west3-docker.pkg.dev/$PROJECT_ID/hss-backend/hss-backend:$SHORT_SHA'

# Build options
options:
  logging: CLOUD_LOGGING_ONLY
  machineType: 'E2_HIGHCPU_8'

# Timeout
timeout: '1200s'
